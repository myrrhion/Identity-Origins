plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group
repositories {
    maven{
        url 'https://maven.terraformersmc.com'
    }
    maven {
        url = 'https://maven.cafeteria.dev'
        content {
            includeGroup 'net.adriantodt.fabricmc'
        }
    }

    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release/"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
    maven {
        name = "Ladysnake Libs"
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
        content {
            includeGroup 'io.github.ladysnake'
            includeGroupByRegex 'io\\.github\\.onyxstudios.*'
        }
    }
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://jitpack.io'
    }
}
dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    include "io.github.ladysnake:PlayerAbilityLib:${project.pal_version}"
    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    modImplementation "com.github.apace100:origins-fabric:${project.origins_version}",{
        exclude group: "io.github.OnyxStudios.Cardinal-Components-API"
    }
    //Required for identity for now

    // config
    modImplementation 'com.github.Draylar.omega-config:omega-config-base:1.0.4-beta'
    include 'com.github.Draylar.omega-config:omega-config-base:1.0.4-beta:min'
    modImplementation ("io.github.ladysnake:PlayerAbilityLib:${project.pal_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
    modImplementation "com.github.Draylar:identity:${project.identity_version}",{
        exclude(group:'com.github.Draylar:angerable-patch:1.0.0')
    }
    modImplementation "io.github.onyxstudios:Cardinal-Components-API:${project.cardinal_version}"
    include "io.github.onyxstudios:Cardinal-Components-API:${project.cardinal_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_version}"

    modImplementation "com.github.apace100:apoli:${project.apoli_version}"
    include "com.github.apace100:apoli:${project.apoli_version}"

}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
